micronaut:
  server:
    port: 9000
  application:
    name: sample-service
  function:
    name: sample-service
---
#tag::security[]
micronaut:
  security:
    intercept-url-map:
      - pattern: /swagger/**
        access:
          - isAnonymous()
      - pattern: /swagger-ui/**
        access:
          - isAnonymous()
      - pattern: /**/**/**
        access:
          - isAuthenticated()
    authentication: bearer # <1>
    token:
      jwt:
        generator:
          access-token:
            expiration: 86400
        signatures:
          secret:
            generator:
              secret: ${JWT_GENERATOR_SIGNATURE_SECRET}
---
#tag::refresh[]
micronaut:
  security:
    token:
      jwt:
        generator:
          refresh-token:
            secret: ${JWT_GENERATOR_SIGNATURE_SECRET}
---
micronaut:
  io:
    watch:
      enabled: true
      paths: src/,res/,../connector/db/src,../core/src
      restart: true
---
micronaut:
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
---
micronaut:
  server:
    cors:
      enabled: true
      allowed:
        origins:
          - https://demo.performance-tracking-app.pages.dev
          - https://test-instance.performance-tracking-app.pages.dev
          - https://scalereal.performance-tracking-app.pages.dev
          - http://localhost:9000
          - https://uat.skillwatch.app
---
hikari-configuration:
  maximum-pool-size: 5
  leak-detection-threshold: 20000
---
datasource:
  url: ${JDBC_DATABASE_URL}
  username: ${JDBC_DATABASE_USERNAME}
  password: ${JDBC_DATABASE_PASSWORD}
  driverClassName: org.postgresql.Driver
---
micronaut:
  email:
    from:
      name: "SkillWatch"
      email: "noreply@skillwatch.app"
---
micronaut:
  object-storage:
    aws:
      default:
        bucket: ${S3_BUCKET_NAME}
---
google:
  oauth:
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
    url: https://oauth2.googleapis.com
---
microsoft:
  oauth:
    client-id: ${MICROSOFT_CLIENT_ID}
    client-secret: ${MICROSOFT_CLIENT_SECRET}
    url: https://login.microsoftonline.com
